rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Utility helpers
    function isSignedIn() { return request.auth != null; }
    function isOwner(uid) { return isSignedIn() && request.auth.uid == uid; }
    function isPolice() {
      return isSignedIn() && (
        request.auth.token.role == 'police' ||
        (request.auth.token.roles is list && 'police' in request.auth.token.roles)
      );
    }

    // 1) Make ALL READS public so the dashboard can always fetch alerts.
    match /{document=**} {
      allow read: if true;

      // Police can write absolutely anywhere
      allow write: if isPolice();
    }

    // 2) Minimal WRITE permissions for users under /users/{uid}
    match /users/{uid} {
      allow create, update: if isOwner(uid);
      allow delete: if false;

      match /alerts/{state}/items/{alertId} {
        // Owners can create alerts in active or past
        allow create: if isOwner(uid) && (state == 'active' || state == 'past');

        // Owners can update only active alerts to set resolvedAt
        allow update: if isOwner(uid) && state == 'active' &&
                      resource.data.resolvedAt == null &&
                      request.resource.data.resolvedAt is timestamp;

        // Owners can delete only their active alerts
        allow delete: if isOwner(uid) && state == 'active';
      }
    }
  }
}
